// Code generated by lister-gen. DO NOT EDIT.

package v1beta1

import (
	v1beta1 "github.com/easysoft/quickon-api/qucheng/v1beta1"
	"k8s.io/apimachinery/pkg/api/errors"
	"k8s.io/apimachinery/pkg/labels"
	"k8s.io/client-go/tools/cache"
)

// DbRestoreLister helps list DbRestores.
// All objects returned here must be treated as read-only.
type DbRestoreLister interface {
	// List lists all DbRestores in the indexer.
	// Objects returned here must be treated as read-only.
	List(selector labels.Selector) (ret []*v1beta1.DbRestore, err error)
	// DbRestores returns an object that can list and get DbRestores.
	DbRestores(namespace string) DbRestoreNamespaceLister
	DbRestoreListerExpansion
}

// dbRestoreLister implements the DbRestoreLister interface.
type dbRestoreLister struct {
	indexer cache.Indexer
}

// NewDbRestoreLister returns a new DbRestoreLister.
func NewDbRestoreLister(indexer cache.Indexer) DbRestoreLister {
	return &dbRestoreLister{indexer: indexer}
}

// List lists all DbRestores in the indexer.
func (s *dbRestoreLister) List(selector labels.Selector) (ret []*v1beta1.DbRestore, err error) {
	err = cache.ListAll(s.indexer, selector, func(m interface{}) {
		ret = append(ret, m.(*v1beta1.DbRestore))
	})
	return ret, err
}

// DbRestores returns an object that can list and get DbRestores.
func (s *dbRestoreLister) DbRestores(namespace string) DbRestoreNamespaceLister {
	return dbRestoreNamespaceLister{indexer: s.indexer, namespace: namespace}
}

// DbRestoreNamespaceLister helps list and get DbRestores.
// All objects returned here must be treated as read-only.
type DbRestoreNamespaceLister interface {
	// List lists all DbRestores in the indexer for a given namespace.
	// Objects returned here must be treated as read-only.
	List(selector labels.Selector) (ret []*v1beta1.DbRestore, err error)
	// Get retrieves the DbRestore from the indexer for a given namespace and name.
	// Objects returned here must be treated as read-only.
	Get(name string) (*v1beta1.DbRestore, error)
	DbRestoreNamespaceListerExpansion
}

// dbRestoreNamespaceLister implements the DbRestoreNamespaceLister
// interface.
type dbRestoreNamespaceLister struct {
	indexer   cache.Indexer
	namespace string
}

// List lists all DbRestores in the indexer for a given namespace.
func (s dbRestoreNamespaceLister) List(selector labels.Selector) (ret []*v1beta1.DbRestore, err error) {
	err = cache.ListAllByNamespace(s.indexer, s.namespace, selector, func(m interface{}) {
		ret = append(ret, m.(*v1beta1.DbRestore))
	})
	return ret, err
}

// Get retrieves the DbRestore from the indexer for a given namespace and name.
func (s dbRestoreNamespaceLister) Get(name string) (*v1beta1.DbRestore, error) {
	obj, exists, err := s.indexer.GetByKey(s.namespace + "/" + name)
	if err != nil {
		return nil, err
	}
	if !exists {
		return nil, errors.NewNotFound(v1beta1.Resource("dbrestore"), name)
	}
	return obj.(*v1beta1.DbRestore), nil
}
