// Code generated by lister-gen. DO NOT EDIT.

package v1beta1

import (
	v1beta1 "github.com/easysoft/quickon-api/qucheng/v1beta1"
	"k8s.io/apimachinery/pkg/api/errors"
	"k8s.io/apimachinery/pkg/labels"
	"k8s.io/client-go/tools/cache"
)

// RestoreSetLister helps list RestoreSets.
// All objects returned here must be treated as read-only.
type RestoreSetLister interface {
	// List lists all RestoreSets in the indexer.
	// Objects returned here must be treated as read-only.
	List(selector labels.Selector) (ret []*v1beta1.RestoreSet, err error)
	// RestoreSets returns an object that can list and get RestoreSets.
	RestoreSets(namespace string) RestoreSetNamespaceLister
	RestoreSetListerExpansion
}

// restoreSetLister implements the RestoreSetLister interface.
type restoreSetLister struct {
	indexer cache.Indexer
}

// NewRestoreSetLister returns a new RestoreSetLister.
func NewRestoreSetLister(indexer cache.Indexer) RestoreSetLister {
	return &restoreSetLister{indexer: indexer}
}

// List lists all RestoreSets in the indexer.
func (s *restoreSetLister) List(selector labels.Selector) (ret []*v1beta1.RestoreSet, err error) {
	err = cache.ListAll(s.indexer, selector, func(m interface{}) {
		ret = append(ret, m.(*v1beta1.RestoreSet))
	})
	return ret, err
}

// RestoreSets returns an object that can list and get RestoreSets.
func (s *restoreSetLister) RestoreSets(namespace string) RestoreSetNamespaceLister {
	return restoreSetNamespaceLister{indexer: s.indexer, namespace: namespace}
}

// RestoreSetNamespaceLister helps list and get RestoreSets.
// All objects returned here must be treated as read-only.
type RestoreSetNamespaceLister interface {
	// List lists all RestoreSets in the indexer for a given namespace.
	// Objects returned here must be treated as read-only.
	List(selector labels.Selector) (ret []*v1beta1.RestoreSet, err error)
	// Get retrieves the RestoreSet from the indexer for a given namespace and name.
	// Objects returned here must be treated as read-only.
	Get(name string) (*v1beta1.RestoreSet, error)
	RestoreSetNamespaceListerExpansion
}

// restoreSetNamespaceLister implements the RestoreSetNamespaceLister
// interface.
type restoreSetNamespaceLister struct {
	indexer   cache.Indexer
	namespace string
}

// List lists all RestoreSets in the indexer for a given namespace.
func (s restoreSetNamespaceLister) List(selector labels.Selector) (ret []*v1beta1.RestoreSet, err error) {
	err = cache.ListAllByNamespace(s.indexer, s.namespace, selector, func(m interface{}) {
		ret = append(ret, m.(*v1beta1.RestoreSet))
	})
	return ret, err
}

// Get retrieves the RestoreSet from the indexer for a given namespace and name.
func (s restoreSetNamespaceLister) Get(name string) (*v1beta1.RestoreSet, error) {
	obj, exists, err := s.indexer.GetByKey(s.namespace + "/" + name)
	if err != nil {
		return nil, err
	}
	if !exists {
		return nil, errors.NewNotFound(v1beta1.Resource("restoreset"), name)
	}
	return obj.(*v1beta1.RestoreSet), nil
}
