// Code generated by lister-gen. DO NOT EDIT.

package v1beta1

import (
	v1beta1 "github.com/easysoft/quickon-api/qucheng/v1beta1"
	"k8s.io/apimachinery/pkg/api/errors"
	"k8s.io/apimachinery/pkg/labels"
	"k8s.io/client-go/tools/cache"
)

// StorageProfileLister helps list StorageProfiles.
// All objects returned here must be treated as read-only.
type StorageProfileLister interface {
	// List lists all StorageProfiles in the indexer.
	// Objects returned here must be treated as read-only.
	List(selector labels.Selector) (ret []*v1beta1.StorageProfile, err error)
	// StorageProfiles returns an object that can list and get StorageProfiles.
	StorageProfiles(namespace string) StorageProfileNamespaceLister
	StorageProfileListerExpansion
}

// storageProfileLister implements the StorageProfileLister interface.
type storageProfileLister struct {
	indexer cache.Indexer
}

// NewStorageProfileLister returns a new StorageProfileLister.
func NewStorageProfileLister(indexer cache.Indexer) StorageProfileLister {
	return &storageProfileLister{indexer: indexer}
}

// List lists all StorageProfiles in the indexer.
func (s *storageProfileLister) List(selector labels.Selector) (ret []*v1beta1.StorageProfile, err error) {
	err = cache.ListAll(s.indexer, selector, func(m interface{}) {
		ret = append(ret, m.(*v1beta1.StorageProfile))
	})
	return ret, err
}

// StorageProfiles returns an object that can list and get StorageProfiles.
func (s *storageProfileLister) StorageProfiles(namespace string) StorageProfileNamespaceLister {
	return storageProfileNamespaceLister{indexer: s.indexer, namespace: namespace}
}

// StorageProfileNamespaceLister helps list and get StorageProfiles.
// All objects returned here must be treated as read-only.
type StorageProfileNamespaceLister interface {
	// List lists all StorageProfiles in the indexer for a given namespace.
	// Objects returned here must be treated as read-only.
	List(selector labels.Selector) (ret []*v1beta1.StorageProfile, err error)
	// Get retrieves the StorageProfile from the indexer for a given namespace and name.
	// Objects returned here must be treated as read-only.
	Get(name string) (*v1beta1.StorageProfile, error)
	StorageProfileNamespaceListerExpansion
}

// storageProfileNamespaceLister implements the StorageProfileNamespaceLister
// interface.
type storageProfileNamespaceLister struct {
	indexer   cache.Indexer
	namespace string
}

// List lists all StorageProfiles in the indexer for a given namespace.
func (s storageProfileNamespaceLister) List(selector labels.Selector) (ret []*v1beta1.StorageProfile, err error) {
	err = cache.ListAllByNamespace(s.indexer, s.namespace, selector, func(m interface{}) {
		ret = append(ret, m.(*v1beta1.StorageProfile))
	})
	return ret, err
}

// Get retrieves the StorageProfile from the indexer for a given namespace and name.
func (s storageProfileNamespaceLister) Get(name string) (*v1beta1.StorageProfile, error) {
	obj, exists, err := s.indexer.GetByKey(s.namespace + "/" + name)
	if err != nil {
		return nil, err
	}
	if !exists {
		return nil, errors.NewNotFound(v1beta1.Resource("storageprofile"), name)
	}
	return obj.(*v1beta1.StorageProfile), nil
}
